name: Deploy E-Learning Platform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
        lfs: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Create environment file
      run: |
        echo "# Azure AD (Host Tenant) - Content Editors" >> .env.production
        echo "REACT_APP_AZURE_AD_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}" >> .env.production
        echo "REACT_APP_AZURE_AD_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}" >> .env.production
        echo "" >> .env.production
        echo "# Azure B2C - Content Consumers" >> .env.production
        echo "REACT_APP_B2C_CLIENT_ID=${{ secrets.B2C_CLIENT_ID }}" >> .env.production
        echo "REACT_APP_B2C_AUTHORITY=${{ secrets.B2C_AUTHORITY }}" >> .env.production
        echo "REACT_APP_B2C_KNOWN_AUTHORITY=${{ secrets.B2C_KNOWN_AUTHORITY }}" >> .env.production
        echo "" >> .env.production
        echo "# Application URLs" >> .env.production
        echo "REACT_APP_REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> .env.production
        echo "REACT_APP_POST_LOGOUT_REDIRECT_URI=${{ secrets.POST_LOGOUT_REDIRECT_URI }}" >> .env.production
        echo "" >> .env.production
        echo "# SharePoint Configuration" >> .env.production
        echo "REACT_APP_SHAREPOINT_SITE_URL=${{ secrets.SHAREPOINT_SITE_URL }}" >> .env.production
        echo "REACT_APP_SHAREPOINT_LIST_ID=${{ secrets.SHAREPOINT_LIST_ID }}" >> .env.production

    - name: Run tests
      run: npm test -- --coverage --ci --watchAll=false

    - name: Build application
      run: npm run build
      env:
        CI: false

    - name: Build And Deploy to Azure Static Web Apps
      if: github.event_name == 'push'
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "/"
        output_location: "build"
        skip_app_build: true
      env:
        # Ensure environment variables are available during deployment
        REACT_APP_AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
        REACT_APP_AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    - name: Deploy to Netlify (Alternative)
      if: github.event_name == 'push' && !secrets.AZURE_STATIC_WEB_APPS_API_TOKEN
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './build'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request
    steps:
    - name: Close Pull Request
      id: closepullrequest
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        action: "close"